version: '3'

services:
  backend:
    build: ./backend
    ports:
      - "8080:8080"
    environment:
      - API_GATEWAY_URL=https://mga0vgs4zg.execute-api.us-east-1.amazonaws.com/prod
      - API_GATEWAY_KEY=sSdUbnYefi3RxoPLruBnn6KaJmFEiMr09vh0Vaxe
      - PORT=8080
      - AWS_REGION=us-east-1
      - TFT_CURRENT_SET=14
      - EXPORT_DIR=./data/exports
    # You have two options here:
    # Option 1: Comment out the volume to prevent overwriting the executable
    # volumes:
    #   - ./backend:/app
    # Option 2: Change how the volume is mounted to preserve the executable
    # volumes:
    #   - ./backend/src:/app/src  # Only mount source files
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "80:5173"
 
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      # Corrected API URL using the backend service name and VITE_ prefix
      - VITE_API_URL=http://backend:8080
      - VITE_AUTH0DOMAIN=dev-a0oi0uq2ah7wnkxf.us.auth0.com
      - VITE_AUTH0CLIENTID=ijy2cm6uFgnroDBuHkjSZhhQnOjQu4cH
      # Note: Keep client secrets out of version control if possible. Use Docker secrets or other mechanisms.
      - VITE_AUTH0CLIENTSECRET=9vwp2blUIhRs36zWvRbgk9enXWd7vMK9y6p2A2A3emq7BHz9k-GkIp77sF45ujYo
    
    # Explicitly set the command to use npx (bypassing the node executable issue)
    command: ["npm", "run", "dev", "--", "--host"]

networks:
  app-network:
 